version: "3.4"

services:
    nginx:
        build:
            context: .
            dockerfile: docker/Nginx.Dockerfile
        restart: always
        ports:
            - 8098:80
        #     - 8098:80  
        volumes:
            - ./locketgo-lms-php:/var/www/locketgo-lms-php
            - ./locketgo-lms-vue/public:/var/www/locketgo-lms-php/public/assets
        links:
            - fpm
            - node

    fpm:
        build:
            context: .
            dockerfile: docker/Fpm.Dockerfile
        restart: always
        volumes:
            - ./locketgo-lms-php:/var/www/locketgo-lms-php
            - ./locketgo-lms-vue/public:/var/www/locketgo-lms-php/public/assets
            - ./supervisor/workers:/etc/supervisor/conf.d
            - ./supervisor/config:/etc/supervisor
            - ./supervisor/logs:/var/www/supervisor-logs
            - ./sync_containers:/var/www/sync_containers
        command: bash -c "/var/www/sync_containers/wait-for-it.sh pgsql:5432 --timeout=300 -- supervisord -c /etc/supervisor/supervisord.conf"
        extra_hosts:
            - "web_server_ip:192.168.88.129"
        links:
            # - mysql
            - redis
            - pgsql

    node:
        image: node
        restart: always
        ports:
            - 4444:4444
            - 6667:6667/udp
        volumes: 
            - ./locketgo-lms-node:/var/www/html/
        working_dir: /var/www/html/
        command: bash -c "npm run start"
        extra_hosts: 
            - "dockerhost:$DOCKERHOST"
            - "web_server_ip:192.168.88.129"
        links:
            # - mysql
            - redis
            - pgsql
            - udp_broadcast_redirect

    adminer:
        image: adminer
        restart: always
        ports:
          - 6080:8080
        links:
            # - mysql
            - pgsql

    # mysql:
        # image: mysql:5.7
        # image: nidorpi/rpi-mysql5.7
        # restart: always
        # ports:
        #     - 33061:3306
        # environment:
        #     - MYSQL_ROOT_PASSWORD=root
        #     - MYSQL_DATABASE=lms
        # volumes:
        #     - ./databases:/var/lib/mysql

    pgsql:
        image: tobi312/rpi-postgresql
        # image: ${PGSQL_DOCKER_IMAGE}
        restart: always
        ports:
            - 5432:5432
        environment:
            - POSTGRES_PASSWORD=root
            - POSTGRES_DB=lms
        volumes:
            - ./databases:/var/lib/postgresql/data

    redis:
        image: redis
        restart: always
        ports:
          - 6380:6379

    udp_broadcast_redirect:
        image: node
        network_mode: "host"
        restart: always
        ports:
            - 6665:6665/udp
        volumes: 
            - ./udp-broadcast-redirect:/var/www/html/
        working_dir: /var/www/html/
        command: bash -c "node redirect.js"

    # docker system prune -a